import random
import base64
import time

import requests
import numpy as np
import os.path
from virustotal_python import Virustotal
from tqdm import tqdm

# 创建vtotal对象
vtotal = Virustotal(API_KEY="79386c1a07afad1707f1408803cd1781dfae6b7c8b793687602e56599501b64f", API_VERSION="v3")
# 基础地址
url = "https://www.virustotal.com/api/v3/files/"

# response头
headers = {
    "Accept": "application/json",
    "x-apikey": "79386c1a07afad1707f1408803cd1781dfae6b7c8b793687602e56599501b64f"
}


# 计算检测率
def makeResult(detectors, detectors_num, detectors_list):
    detectors_values = list(detectors.values())
    detectors_num_values = list(detectors_num.values())
    result = []
    for i in range(0, 30):
        if detectors_num_values[i] != 0:
            result.append(round(detectors_values[i] / detectors_num_values[i], 3))
        else:
            result.append("无数据")
    a = list(zip(detectors_list, result))
    print(a)


# 解码检测id
def decodeBase64(id):
    decode_id = base64.b64decode(id).decode("utf-8")
    a = decode_id.split(":")
    return a[0]


# 计算准确度
def get_dist_Accuraccy(dist):
    for i in range(len(dist)):
        if dist[i][1] != 0:
            dist[i][3] = round(dist[i][2] / dist[i][1], 3)
    return dist


# 上传和检测
def function(dir_Path, dist):
    # 获取要上传的文件
    malware_files_list = get_dir_list(dir_Path)
    malware_files_list_tqdm = tqdm(malware_files_list, ncols=100)
    for item_path in malware_files_list_tqdm:
        # 写入日志的数据
        detail = ""
        detail = detail + str(item_path) + ","

        # 获取检测id
        item_plain_id = get_id(dir_Path + "\\" + item_path)

        resp = vtotal.request(f"files/{item_plain_id}")
        detail = detail + "size:" + str(resp.data["attributes"]["size"]) + ","
        detail = detail + str(item_plain_id) + ",["
        # 获取检测结果
        res_dict = resp.data["attributes"]["last_analysis_results"]
        # 记录检测数据
        for index in range(len(dist)):
            # 获取供应商
            support = dist[index][0]
            # 如果本次检测有该供应商提供的结果
            if support in res_dict:
                support_dist = res_dict[support]
                # 检测总数+1
                dist[index][1] += 1
                # 如果检测结果为恶意软件
                if support_dist['category'] == "malicious":
                    detail = detail + str(support) + ":" + res_dict[support]['category'] + ","
                    dist[index][2] += 1
                else:
                    detail = detail + str(support) + ":" + res_dict[support]['category'] + ","
            else:
                detail = detail + str(support) + ":" + "无数据" + ","
        detail = detail.rsplit(",", 1)[0] + "]"
        with open("result.log", "a+") as f:
            f.write(str(detail) + "\n")
        time.sleep(0.1)
    # 输出精确度
    dist_ac = get_dist_Accuraccy(dist)
    print(dist_ac)
    now_time = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())
    with open("result.log", "a+") as f:
        f.write(now_time + "\n")
        f.write(str(dist) + "\n")
# 获取要上传的文件列表
def get_dir_list(Path):
    malware_files_list = sorted(os.listdir(Path))
    return malware_files_list


# 解码base64
def get_plain_id(base64_id):
    base64_byte = base64.b64decode(base64_id)
    base64_str = str(base64_byte, encoding="utf-8")
    base64_str = base64_str[0:32]
    return base64_str


# 生成检测id
def get_id(FILE_PATH):
    files = {"file": (os.path.basename(FILE_PATH), open(os.path.abspath(FILE_PATH), "rb"))}
    resp = vtotal.request("files", files=files, method="POST")
    plain_id = get_plain_id(resp.data["id"])
    return plain_id


if __name__ == '__main__':
    # 【供应商名字,总检测数量，检出数量，检测率】
    dist = [["Baidu", 0, 0, 0], ["ClamAV", 0, 0, 0], ["Qihoo-360", 0, 0, 0], ["Panda", 0, 0, 0], ["Alibaba", 0, 0, 0],
            ["Tencent", 0, 0, 0], ["Jiangmin", 0, 0, 0], ["Cylance", 0, 0, 0], ["Cyren", 0, 0, 0], ["Bkav", 0, 0, 0],
            ["Lionic", 0, 0, 0], ["Elastic", 0, 0, 0], ["DrWeb", 0, 0, 0], ["MicroWorld_eScan", 0, 0, 0],
            ["CAT-QuickHeal", 0, 0, 0], ["ALYac", 0, 0, 0], ["Zillya", 0, 0, 0], ["Sangfor", 0, 0, 0],
            ["K7AntiVirus", 0, 0, 0], ["K7GW", 0, 0, 0], ["Cybereason", 0, 0, 0], ["Arcabit", 0, 0, 0],
            ["BitDefenderTheta", 0, 0, 0], ["SymantecMobileInsight", 0, 0, 0], ["Symantec", 0, 0, 0],
            ["ESET-NOD32", 0, 0, 0], ["APEX", 0, 0, 0], ["Paloalto", 0, 0, 0], ["Kaspersky", 0, 0, 0],
            ["BitDefender", 0, 0, 0], ["NANO-Antivirus", 0, 0, 0], ["ViRobot", 0, 0, 0], ["Avast", 0, 0, 0],
            ["Rising", 0, 0, 0]]


    # 输入恶意样本文件夹
    flag = True
    while flag != '#':
        try:
            dir_Path = input("请输入恶意样本文件夹：")
            function(dir_Path, dist)
        except FileNotFoundError:
            print("系统找不到指定的路径")
        flag = input('输入\'#\'退出或者输入其他继续!')
