#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2019/12/29/029 0:46
# @Author  : H
# @File    : getHash-v2.py
import os
import hashlib
import shutil

def getHash(filename, filepath, outputpath):
    datas = {}  # 结果存为json，以便后需
    f = open(filepath, "rb")
    rb = f.read()
    data = {'MD5': hashlib.md5(rb).hexdigest(),
            'SHA1': hashlib.sha1(rb).hexdigest(),
            'SHA256': hashlib.sha256(rb).hexdigest()}

    #newname = data['SHA256'] + '-' + filename
    newname = data['SHA256']
    newname = filepath.replace(filename, newname)
    datas[filename] = data
    f.close()


    # shutil.copyfile(filepath, newname) #重命名并保存原文件\


    try:
        os.rename(filepath, newname)  # 直接重命名
        with open(outputpath, "a", encoding="utf-8")as f:
            f.writelines("filename:" + filename + "\n")
            print("[+]succeed get the teatures of " + filename)
            for key, value in datas[filename].items():
                f.writelines(key + ":" + value + "\n")
            f.writelines("\n")
            return True
    except Exception as err:
        print("Outputpath error")
        return False
        pass


def func(path, sub):
    if os.path.isdir(path):
        # 如果绝对路径下的文件夹
        for i in os.listdir(path):  # i文件名
            path2 = os.path.join(path, i)  # 拼接绝对路径
            if os.path.isdir(path2):  # 判断如果是文件夹,调用本身
                func(path2, sub)
            else:
                sub.append(path2)
    elif os.path.isfile(path):
        # 如果绝对路径下的文件
        sub.append(path)
    else:
        print("File or path doesn\'t exit")


print("""
///
// 888    888        d8888   d8888b   888    888 // 
// 888    888       d88888 d88P  Y88b 888    888 // 
// 888    888      d88P888 Y88b       888    888 // 
// 8888888888     d88P 888   Y888b    8888888888 // 
// 888    888    d88P  888      Y88b  888    888 // 
// 888    888   d88P   888        888 888    888 // 
// 888    888  d8888888888 Y88b  d88P 888    888 // 
// 888    888 d88P     888   Y8888P   888    888 //                                              
///

               By C  @2021/12/27
""")
flag = True
while flag != '#':
    path = input('Enter the filename or foldername under absolute path:')
    if path.strip('\n') == '':
        continue
    else:
        path = path.strip('\n')
    outputpath = input('Enter outputpath or N/n(Default path: d:\hash.txt):')
    if outputpath.strip('\n') == '':
        continue

    # 输入路径处理
    if "/" in path:
        path = path.replace("/", "\\")

    if "/" in outputpath:
        outputpath = outputpath.replace("/", "\\")

    sub = []
    outputpath = outputpath.strip('\n')

    if (outputpath != 'N' or outputpath != 'n'):
        outputpath = outputpath
    if outputpath == 'N' or outputpath == 'n':
        outputpath = r'd:\hash.txt'

    print(outputpath)
    flag1 = False
    func(path, sub)
    for i in sub:
        filename = i.split('\\')[-1]

        filepath = i
        flag1 = getHash(filename, filepath, outputpath)
    if flag1:
        print("Outputpath:===>" + outputpath)
    flag1 = False
    path = ''
    outputpath = ''
    sub = []
    flag = input('Enter \'#\' to quit or others to continue!')
